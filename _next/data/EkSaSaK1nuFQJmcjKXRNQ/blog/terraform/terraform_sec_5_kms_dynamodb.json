{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var i=n=>r(n,\"__esModule\",{value:!0});var u=(n,s)=>()=>(s||n((s={exports:{}}).exports,s),s.exports),g=(n,s)=>{i(n);for(var t in s)r(n,t,{get:s[t],enumerable:!0})},N=(n,s,t)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let a of p(s))!y.call(n,a)&&a!==\"default\"&&r(n,a,{get:()=>s[a],enumerable:!(t=m(s,a))||t.enumerable});return n},f=n=>N(i(r(n!=null?d(h(n)):{},\"default\",n&&n.__esModule&&\"default\"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var l=u((D,o)=>{o.exports=_jsx_runtime});var v={};g(v,{default:()=>w,frontmatter:()=>_});var e=f(l()),_={title:\"Encrypting DynamoDB with AWS KMS: A Secure and Easy Guide\",date:\"2023-06-30\",tags:[\"Terraform\",\"Cloud\",\"AWS\"],draft:!1,summary:\"Discover how to use Terraform and AWS Key Management Service (KMS) to encrypt DynamoDB tables and enhance cybersecurity.\"};function b(n={}){let{wrapper:s}=n.components||{};return s?(0,e.jsx)(s,Object.assign({},n,{children:(0,e.jsx)(t,{})})):t();function t(){let a=Object.assign({p:\"p\",pre:\"pre\",code:\"code\",span:\"span\",strong:\"strong\"},n.components),{Image:c}=a;return c||k(\"Image\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:\"When it comes to storing and retrieving application data, Amazon DynamoDB is a popular choice for many developers. It's a fast, fully managed NoSQL database service that provides seamless scalability and low-latency performance. However, ensuring data security in DynamoDB is a top priority, and that's where AWS Key Management Service (KMS) comes into play.\"}),(0,e.jsx)(a.p,{children:\"AWS KMS is a managed service that makes it easy to create and manage cryptographic keys and control their use across a wide range of AWS services and applications. In this blog post, I'll show you how to use Terraform to create a Customer Master Key (CMK) with AWS KMS and use it to encrypt a new DynamoDB table, all while maintaining best practices for cybersecurity.\"}),(0,e.jsx)(a.p,{children:\"First, let's create a CMK using Terraform. Here's a simple HCL example that defines a new key in AWS KMS:\"}),(0,e.jsx)(a.pre,{className:\"language-hcl\",children:(0,e.jsxs)(a.code,{className:\"code-highlight language-hcl\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsxs)(a.span,{className:\"token keyword\",children:[\"resource \",(0,e.jsx)(a.span,{className:\"token type variable\",children:'\"aws_kms_key\"'})]}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"dynamodb_key\"'}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(a.span,{className:\"token property\",children:\"description\"}),\"             \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"=\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"KMS key for encrypting DynamoDB tables\"'}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(a.span,{className:\"token property\",children:\"deletion_window_in_days\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"=\"}),\" \",(0,e.jsx)(a.span,{className:\"token number\",children:\"7\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsxs)(a.span,{className:\"token keyword\",children:[\"output\",(0,e.jsx)(a.span,{className:\"token type variable\",children:' \"kms_key_id\" '})]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(a.span,{className:\"token property\",children:\"value\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"=\"}),` aws_kms_key.dynamodb_key.id\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsx)(a.p,{children:\"We can see that the CMK has been successfully created from the AWS console.\"}),(0,e.jsx)(c,{width:500,src:\"/static/images/terraform/t5_kms.png\"}),(0,e.jsx)(a.p,{children:\"Now that we have our CMK, we can use it to create an encrypted DynamoDB table. Here's an example HCL configuration for a DynamoDB table with Server-Side Encryption (SSE) enabled, using the previously created CMK:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\"code-highlight\",children:[(0,e.jsx)(a.span,{className:\"code-line\",children:`resource \"aws_dynamodb_table\" \"encrypted_table\" {\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  name           = \"my-encrypted-table\"\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  billing_mode   = \"PAY_PER_REQUEST\"\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  hash_key       = \"id\"\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  read_capacity  = 5\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  write_capacity = 5\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  attribute {\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`    name = \"id\"\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`    type = \"S\"\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  }\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  server_side_encryption {\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`    enabled     = true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`    kms_key_arn = aws_kms_key.dynamodb_key.arn\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  }\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`}\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`output \"dynamodb_table_name\" {\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  value = aws_dynamodb_table.encrypted_table.name\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`}\n`})]})}),(0,e.jsx)(a.p,{children:\"Just add a simple item to test:\"}),(0,e.jsx)(c,{width:500,src:\"/static/images/terraform/t5_dynamo_item.png\"}),(0,e.jsx)(a.p,{children:\"With this configuration, we've created a DynamoDB table that uses our custom CMK for server-side encryption. By encrypting the data stored in DynamoDB, we add an extra layer of security, ensuring that unauthorized individuals cannot access our sensitive information, even if they somehow manage to gain access to our data storage.\"}),(0,e.jsxs)(a.p,{children:[\"Assuming there is another user \",(0,e.jsx)(a.code,{children:\"dynamo_test_user\"}),\" with \",(0,e.jsx)(a.strong,{children:\"AmazonDynamoDBFullAccess\"}),\" policy attached, he/she will not be able to access the contents of this table:\"]}),(0,e.jsx)(c,{width:600,src:\"/static/images/terraform/t5_testuser.png\"}),(0,e.jsx)(a.p,{children:\"Leveraging AWS KMS to encrypt DynamoDB tables with Terraform is an effective way to enhance the security of your data storage solution. By following cybersecurity best practices and using modern infrastructure management tools like Terraform, you can create a more secure and manageable environment for your applications. Keep an eye out for future blog posts on this topic, where we'll explore more advanced use cases and tips for using Terraform with AWS services.\"})]})}}var w=b;function k(n,s){throw new Error(\"Expected \"+(s?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v;})();\n;return Component;","toc":[],"frontMatter":{"readingTime":{"text":"3 min read","minutes":2.58,"time":154800,"words":516},"slug":"terraform/terraform_sec_5_kms_dynamodb","fileName":"terraform/terraform_sec_5_kms_dynamodb.md","title":"Encrypting DynamoDB with AWS KMS: A Secure and Easy Guide","date":"2023-06-30T00:00:00.000Z","tags":["Terraform","Cloud","AWS"],"draft":false,"summary":"Discover how to use Terraform and AWS Key Management Service (KMS) to encrypt DynamoDB tables and enhance cybersecurity."}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.68,"time":40800,"words":136},"slug":["default"],"fileName":"default.md","name":"L.W.J","avatar":"/static/images/avatar.png","occupation":"CISSP, AWS Certified Security â€“ Specialty, Microsoft Cybersecurity Architect Expert","email":"nerd@supasaf.com","twitter":"https://twitter.com/supasaf","date":null}],"prev":{"title":"Bastion Hosts: Safeguarding Your Cloud Resources","date":"2023-06-26T00:00:00.000Z","tags":["Terraform","Cloud","AWS"],"draft":false,"summary":"Discover the significance of bastion hosts in cloud security and learn how to set up a secure gateway using Terraform in AWS, ensuring protection for private resources while reducing the attack surface area.","slug":"terraform/terraform_sec_4_bastion"},"next":{"title":"Envelope Encryption: Boosting Cloud Security with KMS","date":"2023-07-02T00:00:00.000Z","tags":["Cloud","AWS","Cryptography"],"draft":false,"summary":"Explore envelope encryption and its importance for cloud security, using AWS Key Management Service (KMS) and OpenSSL to protect sensitive data.","images":[],"slug":"general/envelope_encr"}},"__N_SSG":true}