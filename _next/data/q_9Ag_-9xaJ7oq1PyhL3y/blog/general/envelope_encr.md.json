{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var r=t=>i(t,\"__esModule\",{value:!0});var y=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),g=(t,a)=>{r(t);for(var s in a)i(t,s,{get:a[s],enumerable:!0})},k=(t,a,s)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let n of p(a))!u.call(t,n)&&n!==\"default\"&&i(t,n,{get:()=>a[n],enumerable:!(s=d(a,n))||s.enumerable});return t},f=t=>k(r(i(t!=null?h(m(t)):{},\"default\",t&&t.__esModule&&\"default\"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var o=y((_,c)=>{c.exports=_jsx_runtime});var v={};g(v,{default:()=>N,frontmatter:()=>b});var e=f(o()),b={title:\"Envelope Encryption: Boosting Cloud Security with KMS\",date:\"2023-07-02\",tags:[\"Cloud\",\"AWS\",\"Cryptography\"],draft:!1,summary:\"Explore envelope encryption and its importance for cloud security, using AWS Key Management Service (KMS) and OpenSSL to protect sensitive data.\",images:[]};function w(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(s,{})})):s();function s(){let n=Object.assign({p:\"p\",strong:\"strong\",h2:\"h2\",a:\"a\",span:\"span\",ol:\"ol\",li:\"li\",h3:\"h3\",pre:\"pre\",code:\"code\",ul:\"ul\"},t.components),{Image:l}=n;return l||x(\"Image\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"Way back in the dial-up era, long before the cloud was even a twinkle in a developer's eye, I was reading this legendary tome: 'Practical Unix & Internet Security'. It was dense, it was epic, and it taught me that cryptography was basically the secret magic that holds the entire internet together.\"}),(0,e.jsx)(l,{width:600,src:\"/static/images/general/practical_unix_internet_sec.jpeg\"}),(0,e.jsxs)(n.p,{children:[\"Fast forward to today, and guess what? That ancient magic is more important than ever. In the cloud, we're constantly shuffling data around, and we need a rock-solid way to keep it safe. One of the most clever spells in the modern wizard's book is \",(0,e.jsx)(n.strong,{children:\"Envelope Encryption\"}),\".\"]}),(0,e.jsxs)(n.h2,{id:\"what-the-heck-is-envelope-encryption-a-silly-analogy\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#what-the-heck-is-envelope-encryption-a-silly-analogy\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"What the Heck is Envelope Encryption? A Silly Analogy\"]}),(0,e.jsx)(n.p,{children:\"Okay, the name sounds fancy, but the concept is simple. Imagine this:\"}),(0,e.jsxs)(n.ol,{children:[(0,e.jsxs)(n.li,{children:[\"You have a very long, secret letter you want to protect (this is \",(0,e.jsx)(n.strong,{children:\"your data\"}),\").\"]}),(0,e.jsxs)(n.li,{children:[\"You lock it in a sturdy metal box using a simple, everyday key. This key is fast and efficient for locking big boxes. (This is your \",(0,e.jsx)(n.strong,{children:\"Data Key\"}),\").\"]}),(0,e.jsx)(n.li,{children:\"Now you have a problem: what do you do with the key to the box? You can't just tape it to the lid!\"}),(0,e.jsxs)(n.li,{children:[\"So, you take that small, simple key and lock it inside a tiny, nearly-indestructible safe. This safe requires a huge, complex, one-of-a-kind key to open it. (This is your \",(0,e.jsx)(n.strong,{children:\"Master Key\"}),\" from KMS).\"]}),(0,e.jsx)(n.li,{children:'Finally, you take the tiny, locked safe (the encrypted data key) and glue it to the outside of the big metal box (your encrypted data). This tiny safe is the \"envelope.\"'})]}),(0,e.jsx)(n.p,{children:\"That's it! You get the best of both worlds: the speed of a simple key for your big data, and the super-high security of a master key for protecting that simple key. The master key itself never even touches your data.\"}),(0,e.jsxs)(n.h2,{id:\"lets-do-it-for-real-with-aws-kms\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#lets-do-it-for-real-with-aws-kms\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Let's Do It for Real with AWS KMS\"]}),(0,e.jsx)(n.p,{children:\"Let's put the analogy into practice. We'll use AWS KMS as our master locksmith and the command-line tool OpenSSL to handle the actual file locking.\"}),(0,e.jsxs)(n.h3,{id:\"step-1-generate-the-keys\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#step-1-generate-the-keys\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Step 1: Generate the Keys\"]}),(0,e.jsx)(n.p,{children:\"First, we ask our master locksmith (KMS) to create our key set. We need to give it the ID of our master key, which is the big, complex key that never leaves the KMS vault.\"}),(0,e.jsx)(n.pre,{className:\"language-shell\",children:(0,e.jsx)(n.code,{className:\"language-shell code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`aws kms generate-data-key --key-id 085865dc-8e72-42a9-94d6-f60cb43f637b --key-spec AES_256\n`})})}),(0,e.jsx)(n.p,{children:\"Make sure you've already created a master key in your KMS console to get an ID like this.\"}),(0,e.jsx)(l,{width:400,src:\"/static/images/general/general_kms_arn.png\"}),(0,e.jsx)(n.p,{children:\"KMS will hand you back two important things:\"}),(0,e.jsx)(n.pre,{className:\"language-json\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-json\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"CiphertextBlob\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"AQIDAHgp3upyUvXfYTtaE+GSFfzK5pkL/Jc37eipuMi8fqwifwGrgrzt+nBcuzgUefb0Tr7gAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMY626nlBe9k1ZWwoMAgEQgDuvQdZS/mBKVl0cF35ht7iq4WTz1ZlOW/kBARrndF7RHSxU3Kvc7+0PSpcJ28wcmeicvfxdzEs8R681kQ==\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"Plaintext\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"4iP4KiWfyMT43I6VnlmbTXB59ZaWp5U6ZOwCeOKFTOE=\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"KeyId\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"arn:aws:kms:us-west-2:392653644284:key/085865dc-8e72-42a9-94d6-f60cb43f637b\"'}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsxs)(n.ul,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Plaintext\"}),\": This is the simple, everyday key for our big metal box. We'll use this to encrypt our file.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"CiphertextBlob\"}),': This is the tiny, indestructible safe with our simple key locked inside. This is the \"envelope\" itself.']})]}),(0,e.jsxs)(n.h3,{id:\"step-2-lock-the-file\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#step-2-lock-the-file\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Step 2: Lock the File\"]}),(0,e.jsx)(n.p,{children:\"First, let's save our tiny safe (the encrypted key) to a file.\"}),(0,e.jsx)(n.pre,{className:\"language-shell\",children:(0,e.jsx)(n.code,{className:\"language-shell code-highlight\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\"echo\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\"CiphertextBlob\",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"|\"}),\" base64 -d \",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),` enc_data_key.bin\n`]})})}),(0,e.jsxs)(n.p,{children:[\"(Just copy the big string of gibberish from the \",(0,e.jsx)(n.code,{children:\"CiphertextBlob\"}),\" field and paste it where \",(0,e.jsx)(n.code,{children:\"<CiphertextBlob>\"}),\" is).\"]}),(0,e.jsxs)(n.p,{children:[\"Now, we use the simple key (\",(0,e.jsx)(n.code,{children:\"Plaintext\"}),\") to encrypt our actual secret file using OpenSSL.\"]}),(0,e.jsx)(n.pre,{className:\"language-shell\",children:(0,e.jsx)(n.code,{className:\"language-shell code-highlight\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"openssl enc -aes-256-cbc -pbkdf2 -in secret_file.txt -out encrypted_secret_file.txt -pass pass:\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\"Plaintext\",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]})})}),(0,e.jsxs)(n.p,{children:[\"(Again, just copy the \",(0,e.jsx)(n.code,{children:\"Plaintext\"}),\" value. And yes, you might need to install OpenSSL if you're on a Mac: \",(0,e.jsx)(n.code,{children:\"brew install openssl\"}),\").\"]}),(0,e.jsxs)(n.p,{children:[\"At this point, you can safely delete the plaintext key from your memory. All you need to store is the \",(0,e.jsx)(n.code,{children:\"encrypted_secret_file.txt\"}),\" and the \",(0,e.jsx)(n.code,{children:\"enc_data_key.bin\"}),\" (our tiny safe).\"]}),(0,e.jsxs)(n.h3,{id:\"step-3-the-unlocking-process\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#step-3-the-unlocking-process\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Step 3: The Unlocking Process\"]}),(0,e.jsx)(n.p,{children:\"To get our secret back, we just do everything in reverse.\"}),(0,e.jsx)(n.p,{children:\"First, we ask the master locksmith (KMS) to unlock our tiny safe.\"}),(0,e.jsx)(n.pre,{className:\"language-shell\",children:(0,e.jsx)(n.code,{className:\"language-shell code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`aws kms decrypt --ciphertext-blob fileb://enc_data_key.bin\n`})})}),(0,e.jsxs)(n.p,{children:[\"KMS will use the master key to open it and give us back the simple \",(0,e.jsx)(n.code,{children:\"Plaintext\"}),\" key.\"]}),(0,e.jsx)(n.pre,{className:\"language-json\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-json\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\\xA0 \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"KeyId\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"arn:aws:kms:us-west-2:392653644284:key/085865dc-8e72-42a9-94d6-f60cb43f637b\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\\xA0 \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"Plaintext\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"4iP4KiWfyMT43I6VnlmbTXB59ZaWp5U6ZOwCeOKFTOE=\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\\xA0 \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"EncryptionAlgorithm\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"SYMMETRIC_DEFAULT\"'}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"Finally, we use that decrypted \",(0,e.jsx)(n.code,{children:\"Plaintext\"}),\" key to unlock our big file.\"]}),(0,e.jsx)(n.pre,{className:\"language-shell\",children:(0,e.jsx)(n.code,{className:\"language-shell code-highlight\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"openssl enc -d -aes-256-cbc -pbkdf2 -in encrypted_secret_file.txt -out decrypted_secret_file.txt -pass pass:\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\"Plaintext\",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]})})}),(0,e.jsxs)(n.p,{children:[\"And just like that, \",(0,e.jsx)(n.code,{children:\"decrypted_secret_file.txt\"}),\" appears, and our secret letter is readable again!\"]}),(0,e.jsxs)(n.h2,{id:\"the-aha-moment-this-is-everywhere\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#the-aha-moment-this-is-everywhere\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),'The \"Aha!\" Moment: This Is Everywhere!']}),(0,e.jsx)(n.p,{children:`Now, you might be thinking, \"Cool trick, Ted, but that's a lot of command-line work.\" But here's the kicker: you've been using this pattern all along without even knowing it!`}),(0,e.jsxs)(n.p,{children:[\"Recently at work, I was digging into how Kubernetes handles its secrets. When you enable encryption for secrets at rest, guess what technology it uses under the hood? \",(0,e.jsx)(n.strong,{children:\"Envelope encryption!\"}),\" Kubernetes encrypts your secrets with a data key, and then it encrypts that data key with a master key from a provider like AWS KMS. The encrypted secrets and the encrypted data key are then stored safely in \",(0,e.jsx)(n.code,{children:\"etcd\"}),\".\"]}),(0,e.jsxs)(n.p,{children:['It was a real \"aha!\" moment for me. As the old saying goes, ',(0,e.jsx)(n.strong,{children:\"\\u529F\\u4E0D\\u5510\\u6350 (g\\u014Dng b\\xF9 t\\xE1ng ju\\u0101n)\"}),\"\\u2014no effort is ever truly wasted. Learning these fundamental security concepts pays off in the most unexpected places.\"]})]})}}var N=w;function x(t,a){throw new Error(\"Expected \"+(a?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v;})();\n;return Component;","toc":[{"value":"What the Heck is Envelope Encryption? A Silly Analogy","url":"#what-the-heck-is-envelope-encryption-a-silly-analogy","depth":2},{"value":"Let's Do It for Real with AWS KMS","url":"#lets-do-it-for-real-with-aws-kms","depth":2},{"value":"Step 1: Generate the Keys","url":"#step-1-generate-the-keys","depth":3},{"value":"Step 2: Lock the File","url":"#step-2-lock-the-file","depth":3},{"value":"Step 3: The Unlocking Process","url":"#step-3-the-unlocking-process","depth":3},{"value":"The \"Aha!\" Moment: This Is Everywhere!","url":"#the-aha-moment-this-is-everywhere","depth":2}],"frontMatter":{"readingTime":{"text":"5 min read","minutes":4.43,"time":265800,"words":886},"slug":"general/envelope_encr.md","fileName":"general/envelope_encr.md.md","title":"Envelope Encryption: Boosting Cloud Security with KMS","date":"2023-07-02T00:00:00.000Z","tags":["Cloud","AWS","Cryptography"],"draft":false,"summary":"Explore envelope encryption and its importance for cloud security, using AWS Key Management Service (KMS) and OpenSSL to protect sensitive data.","images":[]}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.72,"time":43200,"words":144},"slug":["default"],"fileName":"default.md","name":"Ted","avatar":"/static/images/avatar.jpg","occupation":"CISSP, CKS, AWS Certified Security – Specialty, Microsoft Cybersecurity Architect Expert","email":"nerd@supasaf.com","twitter":"https://twitter.com/supasaf","date":null}],"prev":{"title":"From Zero to Zero Trust: Securing Microservices with SPIFFE (The Fun Way!)","date":"2025-10-06T00:00:00.000Z","tags":["Architect"],"draft":false,"summary":"This post uses a hands-on Go demo to show how SPIFFE/SPIRE automates Zero Trust security for gRPC microservices.","images":[],"slug":"general/spiffe_go_k8s"},"next":null},"__N_SSG":true}